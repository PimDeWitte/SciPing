//
//  RTD2 - Twitter bot that tweets about the most popular github.com news
//  Also makes new friends and prunes its followings.
//

var INTERVAL = 60000;

var config = {
    "consumer_key": 'fW09KUsqOHzVoTUPdruc5bgoo'
    , "consumer_secret": 'YiLik1YNOMxXrUgveiq8YHisSbfmWuz5Bor6Ek3RClM0XdSzI3'
    , "access_token": '2808125833-41UZURECzuW5j18htCxrev93Ql6ykK6tH1KGRsU'
    , "access_token_secret": 'ELEXYBVaQ2gDavSfCFpHAvLukxgZsHIjvKIfTiGVYRuRM'
};

var Bot = require('./bot');

var bot = new Bot(config);

var followers = [];
var isFillingList = false;
var followerString = "";

console.log('RTD2: Running.');

//get date string for today's date (e.g. '2011-01-01')
function datestring () {
  var d = new Date(Date.now() - 24*60*60*1000);  //est timezone
  return d.getUTCFullYear()   + '-'
     +  (d.getUTCMonth() + 1) + '-'
     +   d.getDate();
};
var processingFunction = function() {
    bot.twit.get('followers/list', function(err, reply) {
        if(err) return handleError(err)

        isFillingList = true;
        followers = [];
        for(var i = 0; i < reply.users.length; i++) {
           followers.push(reply.users[i].screen_name);
        }
        isFillingList = false;
        console.log('\n# followers:' + reply.users.length.toString());

        console.log("fol len:"+followers.length);
        var lastOne = followers.length -1;
        for(var i = 0; i < followers.length; i++) {
            console.log(followers[i]);
            if(i == lastOne) {
                followerString = followerString + followers[i]+"";
            } else {
                followerString = followerString + followers[i]+" OR ";
            }

        }

            var params = {
                q: ' '
                , geocode: '48.4244095,-123.391991,10000000mi'
                , count: 5000
                , results_per_page: 5000
              // , from: followerString
            };
            bot.twit.get('search/tweets', params, function (err, reply) {
                if(err) return handleError(err);

                console.log(reply);
                console.log(reply.statuses.length);
            });
    });



};


processingFunction();
setInterval(processingFunction, INTERVAL);

function handleError(err) {
  console.error('response status:', err.statusCode);
  console.error('data:', err.data);
}
