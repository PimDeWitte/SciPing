/*
@AUTHOR REUBEN KATZ, NOT @PIMDEWITE AND ALSO ABSOLUTELY NOT @JESSICATHRASHER
 */

//
//  RTD2 - Twitter bot that tweets about the most popular github.com news
//  Also makes new friends and prunes its followings.
//

Array.prototype.contains = function(obj) {
    var i = this.length;
    while (i--) {
        if (this[i] === obj) {
            return true;
        }
    }
    return false;
}

var INTERVAL = 180000;

var LOCATIONS = {
    "amsterdam" : {
        "geocode" : "52.3737050,4.8869020,100mi",
        "text" : "{name}, how is Amsterdam? Fancy a dinner for 2 with this project? hack4good.io"
    },
    "sanfran" : {
        "geocode" : "37.7819290,-122.4041760,100mi",
        "text" : "{name}, San Fran.. Fancy fancy, but this is also fancy: hack4good.io"
    },
    "bc" : {
        "geocode" : "48.4244095,-123.391991,100mi",
        "text" : "{name}, British Columbia... What can I say.. Oh! Check out this project: hack4good.io"
    }
}

var config = {
    "consumer_key": 'fW09KUsqOHzVoTUPdruc5bgoo'
    , "consumer_secret": 'YiLik1YNOMxXrUgveiq8YHisSbfmWuz5Bor6Ek3RClM0XdSzI3'
    , "access_token": '2808125833-YdUrN3nzzK786SWXHMgVRarEdCoD7yowPIyejTS'
    , "access_token_secret": 'QPes9XxQKup18KVH6Ct78FjliKvSbLPNs4kC4uHmP0m30'
};

var Bot = require('./bot');

var bot = new Bot(config);

var followers = [];
var isFillingList = false;
var followerString = "";
var peopleToTweet = [];
var hasTweeted = [];

console.log('RTD2: Running.');

//get date string for today's date (e.g. '2011-01-01')
function datestring () {
  var d = new Date(Date.now() - 24*60*60*1000);  //est timezone
  return d.getUTCFullYear()   + '-'
     +  (d.getUTCMonth() + 1) + '-'
     +   d.getDate();
};

/*
In this function we get the followers from our twitter account and put them in a list. We clear the list first to ensure that no duplicates are in there.
We also construct the query from: string.
 */
var processingFunction = function() {
    bot.twit.get('followers/list', function(err, reply) {
        if (err) return handleError(err)

        followers = [];
        for (var i = 0; i < reply.users.length; i++) {
            followers.push(reply.users[i].screen_name);
        }
        console.log('\n# followers:' + reply.users.length.toString());

        console.log("fol len:" + followers.length);
        var lastOne = followers.length - 1;
        followerString = "";
        for (var i = 0; i < followers.length; i++) {
            console.log(followers[i]);
            if (i == lastOne) {
                followerString = followerString + followers[i] + "";
            } else {
                followerString = followerString + followers[i] + " OR ";
            }
        }

        console.log("FOLLOWER STRING " + followerString);
        for (var i in LOCATIONS) {
            cityFunction(LOCATIONS[i]);
        }
    });
};

var cityFunction = function(dataObj) {


        var params = {
            q: ' '
            ,geocode: dataObj.geocode
            //, geocode: '48.4244095,-123.391991,100mi' // CANADA
            //, geocode: '37.7819290,-122.4041760,100mi' // SAN FRANCISCO
            // , geocode: '52.3737050,4.8869020,100mi' // AMSTURDAMM
            , count: 100
            , results_per_page: 100
            ,from: followerString
        };
        bot.twit.get('search/tweets', params, function (err, reply) {
            if(err) return handleError(err);


            console.log(reply.statuses.length);

            peopleToTweet = [];

            for (var i = 0; i < reply.statuses.length; i++) {
                var status = reply.statuses[i];
                if((typeof status.retweeted_status).toLowerCase() !== 'object') {
                    //console.log('  username: ' + JSON.stringify(status.user) + ' idx:' + i + ' rt status ' + (typeof status.retweeted_status));
                    if(followers.contains(status.user.screen_name) && !peopleToTweet.contains(status.user.screen_name)) {
                        console.log('  username: ' + JSON.stringify(status.user) + ' idx:' + i + ' rt status ' + (typeof status.retweeted_status));
                        peopleToTweet.push(status.user.screen_name);
                    }
                }


                // add to people to tweet
            }

            for(var i = 0; i < peopleToTweet.length; i++) {
                if(hasTweeted.contains(peopleToTweet[i])) {
                    console.log("We already tweeted " + peopleToTweet[i] + " you stalker");
                    continue;
                }
                console.log("We're going to tweet " + peopleToTweet[i]);
                hasTweeted.push(peopleToTweet[i]);
                bot.twit.post('statuses/update', { status: dataObj.text.replace("{name}", "@"+peopleToTweet[i]) }, function(reply){
                 if(err) return handleError(err);

                 });
            }
        });

}

processingFunction();
setInterval(processingFunction, INTERVAL);

function handleError(err) {
  console.error('response status:', err.statusCode);
  console.error('data:', err.data);
}
